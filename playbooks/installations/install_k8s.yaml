- name: Install Kubernetes on Master and Worker Nodes
  hosts: all
  become: true
  tasks:
    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
          - software-properties-common
        state: present

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install kubelet, kubeadm, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages at current version
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        lock: yes

- name: Initialize Kubernetes Cluster on Master
  hosts: master1
  become: true
  tasks:
    - name: Initialize Kubernetes with kubeadm
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      register: kubeadm_init

    - name: Create .kube directory
      file:
        path: "/home/{{ username }}/.kube"
        state: directory
        mode: '0755'
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Copy Kubernetes admin config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ username }}/.kube/config"
        remote_src: yes
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0644'

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Save join command for workers
      shell: |
        kubeadm token create --print-join-command
      register: worker_join_command

- name: Join Master Nodes to the Cluster
  hosts: masters
  become: true
  tasks:
    - name: Join additional masters to cluster
      command: "{{ hostvars['master1'].worker_join_command.stdout }} --control-plane --certificate-key <certificate-key>"
      when: inventory_hostname != 'master1'

- name: Join Worker Nodes to the Cluster
  hosts: workers
  become: true
  tasks:
    - name: Join workers to Kubernetes cluster
      command: "{{ hostvars['master1'].worker_join_command.stdout }}"
