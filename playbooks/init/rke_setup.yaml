- name: Disable swap and enable IP forwarding
  hosts: "{{ host_group }}"
  become: yes
  tasks:
    - name: Disable swap temporarily
      ansible.builtin.shell: swapoff -a

    - name: Disable swap permanently by commenting out swap entry in fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^\s*([^#\s]+)\s+swap\s+'
        state: absent

    - name: Ensure net.bridge.bridge-nf-call-ip6tables is set
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.bridge.bridge-nf-call-ip6tables=1"
        state: present
        register: ipv6_forward_status

    - name: Ensure net.bridge.bridge-nf-call-iptables is set
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.bridge.bridge-nf-call-iptables=1"
        state: present
        register: ipv4_forward_status
    
    - name: Load module
      ansible.builtin.shell: modprobe br_netfilter
    
    - name: Apply sysctl changes
      command: sysctl -p

    - name: Update apt package list
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install dependencies for Docker
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian bookworm stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker
      ansible.builtin.apt:
        name: docker-ce=5:27.2.1-1~debian.12~bookworm
        state: present
      when: ansible_os_family == "Debian"

    - name: Start and enable Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ username }}"
        groups:
          - docker
        append: yes

    - name: Reboot
      ansible.builtin.reboot:
      when: ipv4_forward_status == 0 || ipv6_forward_status == 0